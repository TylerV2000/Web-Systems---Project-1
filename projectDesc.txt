Part 1: Content (HTML)
After you decide the theme of your website, create HTML pages with the content you want to present. 
Remember to separate content from presentation. The content is placed in the HTML files, and the layout and style will be defined using CSS (see part 2). 
Your website must include:

- at least 2 html pages (use a plain text editor, such as Notepad++, VSCode, or Sublime Text, to write your code):
    > index.html: this is the landing page (must be named index.html). The landing page is the first page a visitor will see when visiting your website.
    > at least 1 more html page (any name)

- a typical layout using semantic tags (header, nav, footer, article...)

- a navigation menu

- page titles for each html page (titles show on the title bar/tabs)

- different size headings

- images:
    > at least 5 images in one html page,
    > the other page(s) may have any number of images (or none).
    > make sure all image paths are relative (not absolute)

- internal links:
    > links from index.html to the other html page(s) you created
    > links from the other page(s) back to index.html
    > make sure all internal links are relative links (not absolute).
    > internal links should open in the same tab/window.
    
- external links:
    > at least two links to external websites (pages that you did not create).
    > external links should open in a new tab/window.

- a list (ordered or unordered)

- a table (with some relevant data)

- your copyright info at the footer (with the Â© symbol)

- classes and id's as needed (for styling with css)

- a button (in every page) to toggle between your main and alternate stylesheets (see parts 2 and 3).

Do not forget to make your pages accessible. You should double-check your code to make sure you are not missing closing tags, etc. and test it using different browsers. Focus on making your pages syntactically and semantically correct. 


Part 2: Style (CSS)
You'll create an external stylesheet (css) to style the html pages you created in part 1. Name this file main.css.

All html pages should link to the same main.css file. 
You must use a variety of selectors and properties presented in chapters 4 and 5, including:

- font family, size, color, background color of text and headings, font color for links (make sure visited and unvisited links are displayed in different colors)
- margins and padding
- pecial effects or animations
- navigation menu styling

Part 3: An alternate style (CSS)
You'll create a different CSS file, with different style rules, to make your pages look completely different (without making any changes to the HTML files). 
The CSS Zen Garden is a great example of how much can be changed by CSS alone: http://www.csszengarden.com/ (Links to an external site.) 

- Name this css file alternate.css.
- The design must look different in terms of color, fonts, special effects.... A simple background and color change is not enough. 
  See the link above (CSS Zen Garden) for ideas.
- All html pages need a button to toggle between the 2 CSS files. Use JavaScript to detect the button click and change the CSS - here is some sample code: toggleCSS.html Download toggleCSS.html 